Traceback (most recent call last):
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.13_1/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
omega = nx.omega(smallWorldNet)
sigma = nx.sigma(smallWorldNet)
print(f'Omega: {omega}, Sigma: {sigma}')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
Input [0;32mIn [17][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m omega [38;5;241m=[39m [43mnx[49m[38;5;241;43m.[39;49m[43momega[49m[43m([49m[43msmallWorldNet[49m[43m)[49m
[1;32m      2[0m sigma [38;5;241m=[39m nx[38;5;241m.[39msigma(smallWorldNet)
[1;32m      3[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m'[39m[38;5;124mOmega: [39m[38;5;132;01m{[39;00momega[38;5;132;01m}[39;00m[38;5;124m, Sigma: [39m[38;5;132;01m{[39;00msigma[38;5;132;01m}[39;00m[38;5;124m'[39m)

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/networkx/utils/decorators.py:845[0m, in [0;36margmap.__call__.<locals>.func[0;34m(_argmap__wrapper, *args, **kwargs)[0m
[1;32m    844[0m [38;5;28;01mdef[39;00m [38;5;21mfunc[39m([38;5;241m*[39margs, __wrapper[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 845[0m     [38;5;28;01mreturn[39;00m [43margmap[49m[38;5;241;43m.[39;49m[43m_lazy_compile[49m[43m([49m[43m__wrapper[49m[43m)[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m<class 'networkx.utils.decorators.argmap'> compilation 38:6[0m, in [0;36margmap_omega_33[0;34m(G, niter, nrand, seed)[0m
[1;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01minspect[39;00m
[1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mitertools[39;00m
[0;32m----> 6[0m [38;5;28;01mimport[39;00m [38;5;21;01mre[39;00m
[1;32m      7[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcollections[39;00m [38;5;28;01mimport[39;00m defaultdict
[1;32m      8[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcontextlib[39;00m [38;5;28;01mimport[39;00m contextmanager

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/networkx/algorithms/smallworld.py:367[0m, in [0;36momega[0;34m(G, niter, nrand, seed)[0m
[1;32m    363[0m niter_random_reference [38;5;241m=[39m niter [38;5;241m*[39m [38;5;241m2[39m
[1;32m    365[0m [38;5;28;01mfor[39;00m _ [38;5;129;01min[39;00m [38;5;28mrange[39m(nrand):
[1;32m    366[0m     [38;5;66;03m# Generate random graph[39;00m
[0;32m--> 367[0m     Gr [38;5;241m=[39m [43mrandom_reference[49m[43m([49m[43mG[49m[43m,[49m[43m [49m[43mniter[49m[38;5;241;43m=[39;49m[43mniter_random_reference[49m[43m,[49m[43m [49m[43mseed[49m[38;5;241;43m=[39;49m[43mseed[49m[43m)[49m
[1;32m    368[0m     randMetrics[[38;5;124m"[39m[38;5;124mL[39m[38;5;124m"[39m][38;5;241m.[39mappend(nx[38;5;241m.[39maverage_shortest_path_length(Gr))
[1;32m    370[0m     [38;5;66;03m# Generate lattice graph[39;00m

File [0;32m<class 'networkx.utils.decorators.argmap'> compilation 44:6[0m, in [0;36margmap_random_reference_39[0;34m(G, niter, connectivity, seed)[0m
[1;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01minspect[39;00m
[1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mitertools[39;00m
[0;32m----> 6[0m [38;5;28;01mimport[39;00m [38;5;21;01mre[39;00m
[1;32m      7[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcollections[39;00m [38;5;28;01mimport[39;00m defaultdict
[1;32m      8[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcontextlib[39;00m [38;5;28;01mimport[39;00m contextmanager

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/networkx/algorithms/smallworld.py:100[0m, in [0;36mrandom_reference[0;34m(G, niter, connectivity, seed)[0m
[1;32m     97[0m G[38;5;241m.[39mremove_edge(c, d)
[1;32m     99[0m [38;5;66;03m# Check if the graph is still connected[39;00m
[0;32m--> 100[0m [38;5;28;01mif[39;00m connectivity [38;5;129;01mand[39;00m [43mlocal_conn[49m[43m([49m[43mG[49m[43m,[49m[43m [49m[43ma[49m[43m,[49m[43m [49m[43mb[49m[43m)[49m [38;5;241m==[39m [38;5;241m0[39m:
[1;32m    101[0m     [38;5;66;03m# Not connected, revert the swap[39;00m
[1;32m    102[0m     G[38;5;241m.[39mremove_edge(a, d)
[1;32m    103[0m     G[38;5;241m.[39mremove_edge(c, b)

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/networkx/algorithms/connectivity/connectivity.py:634[0m, in [0;36mlocal_edge_connectivity[0;34m(G, s, t, flow_func, auxiliary, residual, cutoff)[0m
[1;32m    631[0m     flow_func [38;5;241m=[39m default_flow_func
[1;32m    633[0m [38;5;28;01mif[39;00m auxiliary [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 634[0m     H [38;5;241m=[39m [43mbuild_auxiliary_edge_connectivity[49m[43m([49m[43mG[49m[43m)[49m
[1;32m    635[0m [38;5;28;01melse[39;00m:
[1;32m    636[0m     H [38;5;241m=[39m auxiliary

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/networkx/algorithms/connectivity/utils.py:84[0m, in [0;36mbuild_auxiliary_edge_connectivity[0;34m(G)[0m
[1;32m     82[0m H[38;5;241m.[39madd_nodes_from(G[38;5;241m.[39mnodes())
[1;32m     83[0m [38;5;28;01mfor[39;00m (source, target) [38;5;129;01min[39;00m G[38;5;241m.[39medges():
[0;32m---> 84[0m     [43mH[49m[38;5;241;43m.[39;49m[43madd_edges_from[49m[43m([49m[43m[[49m[43m([49m[43msource[49m[43m,[49m[43m [49m[43mtarget[49m[43m)[49m[43m,[49m[43m [49m[43m([49m[43mtarget[49m[43m,[49m[43m [49m[43msource[49m[43m)[49m[43m][49m[43m,[49m[43m [49m[43mcapacity[49m[38;5;241;43m=[39;49m[38;5;241;43m1[39;49m[43m)[49m
[1;32m     85[0m [38;5;28;01mreturn[39;00m H

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/networkx/classes/digraph.py:686[0m, in [0;36mDiGraph.add_edges_from[0;34m(self, ebunch_to_add, **attr)[0m
[1;32m    684[0m [38;5;28;01mfor[39;00m e [38;5;129;01min[39;00m ebunch_to_add:
[1;32m    685[0m     ne [38;5;241m=[39m [38;5;28mlen[39m(e)
[0;32m--> 686[0m     [38;5;28;01mif[39;00m [43mne[49m[43m [49m[38;5;241;43m==[39;49m[43m [49m[38;5;241;43m3[39;49m:
[1;32m    687[0m         u, v, dd [38;5;241m=[39m e
[1;32m    688[0m     [38;5;28;01melif[39;00m ne [38;5;241m==[39m [38;5;241m2[39m:

[0;31mKeyboardInterrupt[0m: 
KeyboardInterrupt: 

