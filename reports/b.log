Traceback (most recent call last):
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.16/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.inspection import DecisionBoundaryDisplay

plt.figure(figsize=(16,16));

DecisionBoundaryDisplay.from_estimator(
    model, # the model we just train
    X,     # the feature vectors we used to train the model
    cmap = 'Set3', 
    response_method="predict",
    plot_method="pcolormesh",
    shading="auto",
    xlabel=feature_cols[0],
    ylabel=feature_cols[1],
    eps=0.5,
);

# We plot the stars with each type on a different color
colors = plt.cm.get_cmap('hsv', len(df[target_feature].unique()))
for index, startype in enumerate(df[target_feature].unique()):
    stars_one_type = df[df[target_feature] == startype][feature_cols].values
    plt.scatter(stars_one_type[:, 0], stars_one_type[:, 1], color = colors(index), edgecolors="k", label=startype, figsize=(16,16), s=100);

plt.legend(fontsize=12);
plt.show();
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Input [0;32mIn [22][0m, in [0;36m<cell line: 19>[0;34m()[0m
[1;32m     19[0m [38;5;28;01mfor[39;00m index, startype [38;5;129;01min[39;00m [38;5;28menumerate[39m(df[target_feature][38;5;241m.[39munique()):
[1;32m     20[0m     stars_one_type [38;5;241m=[39m df[df[target_feature] [38;5;241m==[39m startype][feature_cols][38;5;241m.[39mvalues
[0;32m---> 21[0m     [43mplt[49m[38;5;241;43m.[39;49m[43mscatter[49m[43m([49m[43mstars_one_type[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[43mstars_one_type[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m[43m [49m[43mcolor[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mcolors[49m[43m([49m[43mindex[49m[43m)[49m[43m,[49m[43m [49m[43medgecolors[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mk[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mlabel[49m[38;5;241;43m=[39;49m[43mstartype[49m[43m,[49m[43m [49m[43mfigsize[49m[38;5;241;43m=[39;49m[43m([49m[38;5;241;43m16[39;49m[43m,[49m[38;5;241;43m16[39;49m[43m)[49m[43m,[49m[43m [49m[43ms[49m[38;5;241;43m=[39;49m[38;5;241;43m100[39;49m[43m)[49m;
[1;32m     23[0m plt[38;5;241m.[39mlegend(fontsize[38;5;241m=[39m[38;5;241m12[39m);
[1;32m     24[0m plt[38;5;241m.[39mshow()

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/pyplot.py:2798[0m, in [0;36mscatter[0;34m(x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, data, **kwargs)[0m
[1;32m   2793[0m [38;5;129m@_copy_docstring_and_deprecators[39m(Axes[38;5;241m.[39mscatter)
[1;32m   2794[0m [38;5;28;01mdef[39;00m [38;5;21mscatter[39m(
[1;32m   2795[0m         x, y, s[38;5;241m=[39m[38;5;28;01mNone[39;00m, c[38;5;241m=[39m[38;5;28;01mNone[39;00m, marker[38;5;241m=[39m[38;5;28;01mNone[39;00m, cmap[38;5;241m=[39m[38;5;28;01mNone[39;00m, norm[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m   2796[0m         vmin[38;5;241m=[39m[38;5;28;01mNone[39;00m, vmax[38;5;241m=[39m[38;5;28;01mNone[39;00m, alpha[38;5;241m=[39m[38;5;28;01mNone[39;00m, linewidths[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m,
[1;32m   2797[0m         edgecolors[38;5;241m=[39m[38;5;28;01mNone[39;00m, plotnonfinite[38;5;241m=[39m[38;5;28;01mFalse[39;00m, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m-> 2798[0m     __ret [38;5;241m=[39m [43mgca[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mscatter[49m[43m([49m
[1;32m   2799[0m [43m        [49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43ms[49m[38;5;241;43m=[39;49m[43ms[49m[43m,[49m[43m [49m[43mc[49m[38;5;241;43m=[39;49m[43mc[49m[43m,[49m[43m [49m[43mmarker[49m[38;5;241;43m=[39;49m[43mmarker[49m[43m,[49m[43m [49m[43mcmap[49m[38;5;241;43m=[39;49m[43mcmap[49m[43m,[49m[43m [49m[43mnorm[49m[38;5;241;43m=[39;49m[43mnorm[49m[43m,[49m
[1;32m   2800[0m [43m        [49m[43mvmin[49m[38;5;241;43m=[39;49m[43mvmin[49m[43m,[49m[43m [49m[43mvmax[49m[38;5;241;43m=[39;49m[43mvmax[49m[43m,[49m[43m [49m[43malpha[49m[38;5;241;43m=[39;49m[43malpha[49m[43m,[49m[43m [49m[43mlinewidths[49m[38;5;241;43m=[39;49m[43mlinewidths[49m[43m,[49m
[1;32m   2801[0m [43m        [49m[43medgecolors[49m[38;5;241;43m=[39;49m[43medgecolors[49m[43m,[49m[43m [49m[43mplotnonfinite[49m[38;5;241;43m=[39;49m[43mplotnonfinite[49m[43m,[49m
[1;32m   2802[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43m([49m[43m{[49m[38;5;124;43m"[39;49m[38;5;124;43mdata[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mdata[49m[43m}[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mdata[49m[43m [49m[38;5;129;43;01mis[39;49;00m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   2803[0m     sci(__ret)
[1;32m   2804[0m     [38;5;28;01mreturn[39;00m __ret

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/__init__.py:1433[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1430[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1431[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1432[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1433[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;28;43mmap[39;49m[43m([49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1435[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1436[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1437[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/axes/_axes.py:4640[0m, in [0;36mAxes.scatter[0;34m(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, **kwargs)[0m
[1;32m   4636[0m         keys_str [38;5;241m=[39m [38;5;124m"[39m[38;5;124m, [39m[38;5;124m"[39m[38;5;241m.[39mjoin([38;5;124mf[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m"[39m [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m extra_keys)
[1;32m   4637[0m         _api[38;5;241m.[39mwarn_external(
[1;32m   4638[0m             [38;5;124m"[39m[38;5;124mNo data for colormapping provided via [39m[38;5;124m'[39m[38;5;124mc[39m[38;5;124m'[39m[38;5;124m. [39m[38;5;124m"[39m
[1;32m   4639[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mParameters [39m[38;5;132;01m{[39;00mkeys_str[38;5;132;01m}[39;00m[38;5;124m will be ignored[39m[38;5;124m"[39m)
[0;32m-> 4640[0m [43mcollection[49m[38;5;241;43m.[39;49m[43m_internal_update[49m[43m([49m[43mkwargs[49m[43m)[49m
[1;32m   4642[0m [38;5;66;03m# Classic mode only:[39;00m
[1;32m   4643[0m [38;5;66;03m# ensure there are margins to allow for the[39;00m
[1;32m   4644[0m [38;5;66;03m# finite size of the symbols.  In v2.x, margins[39;00m
[1;32m   4645[0m [38;5;66;03m# are present by default, so we disable this[39;00m
[1;32m   4646[0m [38;5;66;03m# scatter-specific override.[39;00m
[1;32m   4647[0m [38;5;28;01mif[39;00m mpl[38;5;241m.[39mrcParams[[38;5;124m'[39m[38;5;124m_internal.classic_mode[39m[38;5;124m'[39m]:

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/artist.py:1186[0m, in [0;36mArtist._internal_update[0;34m(self, kwargs)[0m
[1;32m   1179[0m [38;5;28;01mdef[39;00m [38;5;21m_internal_update[39m([38;5;28mself[39m, kwargs):
[1;32m   1180[0m     [38;5;124;03m"""[39;00m
[1;32m   1181[0m [38;5;124;03m    Update artist properties without prenormalizing them, but generating[39;00m
[1;32m   1182[0m [38;5;124;03m    errors as if calling `set`.[39;00m
[1;32m   1183[0m 
[1;32m   1184[0m [38;5;124;03m    The lack of prenormalization is to maintain backcompatibility.[39;00m
[1;32m   1185[0m [38;5;124;03m    """[39;00m
[0;32m-> 1186[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_props[49m[43m([49m
[1;32m   1187[0m [43m        [49m[43mkwargs[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;132;43;01m{cls.__name__}[39;49;00m[38;5;124;43m.set() got an unexpected keyword argument [39;49m[38;5;124;43m"[39;49m
[1;32m   1188[0m [43m        [49m[38;5;124;43m"[39;49m[38;5;132;43;01m{prop_name!r}[39;49;00m[38;5;124;43m"[39;49m[43m)[49m

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/artist.py:1160[0m, in [0;36mArtist._update_props[0;34m(self, props, errfmt)[0m
[1;32m   1158[0m             func [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mset_[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m   1159[0m             [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m callable(func):
[0;32m-> 1160[0m                 [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[1;32m   1161[0m                     errfmt[38;5;241m.[39mformat([38;5;28mcls[39m[38;5;241m=[39m[38;5;28mtype[39m([38;5;28mself[39m), prop_name[38;5;241m=[39mk))
[1;32m   1162[0m             ret[38;5;241m.[39mappend(func(v))
[1;32m   1163[0m [38;5;28;01mif[39;00m ret:

[0;31mAttributeError[0m: PathCollection.set() got an unexpected keyword argument 'figsize'
AttributeError: PathCollection.set() got an unexpected keyword argument 'figsize'

