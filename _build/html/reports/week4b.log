Traceback (most recent call last):
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.13_1/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/enaj/.virtualenvs/p39/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import seaborn # seaborn is a library similar to matplotlib but with some extra features and nicer default color schemes

features = ['Size', 'A_M', 'Temperature', 'Type']
seaborn.pairplot(df[features], hue="Type", palette="husl")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Input [0;32mIn [16][0m, in [0;36m<cell line: 4>[0;34m()[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mseaborn[39;00m [38;5;66;03m# seaborn is a library similar to matplotlib but with some extra features and nicer default color schemes[39;00m
[1;32m      3[0m features [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mSize[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mA_M[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mTemperature[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mType[39m[38;5;124m'[39m]
[0;32m----> 4[0m [43mseaborn[49m[38;5;241;43m.[39;49m[43mpairplot[49m[43m([49m[43mdf[49m[43m[[49m[43mfeatures[49m[43m][49m[43m,[49m[43m [49m[43mhue[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mType[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mpalette[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mhusl[39;49m[38;5;124;43m"[39;49m[43m)[49m

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/seaborn/_decorators.py:46[0m, in [0;36m_deprecate_positional_args.<locals>.inner_f[0;34m(*args, **kwargs)[0m
[1;32m     36[0m     warnings[38;5;241m.[39mwarn(
[1;32m     37[0m         [38;5;124m"[39m[38;5;124mPass the following variable[39m[38;5;132;01m{}[39;00m[38;5;124m as [39m[38;5;132;01m{}[39;00m[38;5;124mkeyword arg[39m[38;5;132;01m{}[39;00m[38;5;124m: [39m[38;5;132;01m{}[39;00m[38;5;124m. [39m[38;5;124m"[39m
[1;32m     38[0m         [38;5;124m"[39m[38;5;124mFrom version 0.12, the only valid positional argument [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m     43[0m         [38;5;167;01mFutureWarning[39;00m
[1;32m     44[0m     )
[1;32m     45[0m kwargs[38;5;241m.[39mupdate({k: arg [38;5;28;01mfor[39;00m k, arg [38;5;129;01min[39;00m [38;5;28mzip[39m(sig[38;5;241m.[39mparameters, args)})
[0;32m---> 46[0m [38;5;28;01mreturn[39;00m [43mf[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/seaborn/axisgrid.py:2130[0m, in [0;36mpairplot[0;34m(data, hue, hue_order, palette, vars, x_vars, y_vars, kind, diag_kind, markers, height, aspect, corner, dropna, plot_kws, diag_kws, grid_kws, size)[0m
[1;32m   2128[0m     diag_kws[38;5;241m.[39msetdefault([38;5;124m"[39m[38;5;124mfill[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m)
[1;32m   2129[0m     diag_kws[38;5;241m.[39msetdefault([38;5;124m"[39m[38;5;124mwarn_singular[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m)
[0;32m-> 2130[0m     [43mgrid[49m[38;5;241;43m.[39;49m[43mmap_diag[49m[43m([49m[43mkdeplot[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mdiag_kws[49m[43m)[49m
[1;32m   2132[0m [38;5;66;03m# Maybe plot on the off-diagonals[39;00m
[1;32m   2133[0m [38;5;28;01mif[39;00m diag_kind [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/seaborn/axisgrid.py:1478[0m, in [0;36mPairGrid.map_diag[0;34m(self, func, **kwargs)[0m
[1;32m   1476[0m     plot_kwargs[38;5;241m.[39msetdefault([38;5;124m"[39m[38;5;124mhue_order[39m[38;5;124m"[39m, [38;5;28mself[39m[38;5;241m.[39m_hue_order)
[1;32m   1477[0m     plot_kwargs[38;5;241m.[39msetdefault([38;5;124m"[39m[38;5;124mpalette[39m[38;5;124m"[39m, [38;5;28mself[39m[38;5;241m.[39m_orig_palette)
[0;32m-> 1478[0m     [43mfunc[49m[43m([49m[43mx[49m[38;5;241;43m=[39;49m[43mvector[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mplot_kwargs[49m[43m)[49m
[1;32m   1479[0m     ax[38;5;241m.[39mlegend_ [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m   1481[0m [38;5;28mself[39m[38;5;241m.[39m_add_axis_labels()

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/seaborn/_decorators.py:46[0m, in [0;36m_deprecate_positional_args.<locals>.inner_f[0;34m(*args, **kwargs)[0m
[1;32m     36[0m     warnings[38;5;241m.[39mwarn(
[1;32m     37[0m         [38;5;124m"[39m[38;5;124mPass the following variable[39m[38;5;132;01m{}[39;00m[38;5;124m as [39m[38;5;132;01m{}[39;00m[38;5;124mkeyword arg[39m[38;5;132;01m{}[39;00m[38;5;124m: [39m[38;5;132;01m{}[39;00m[38;5;124m. [39m[38;5;124m"[39m
[1;32m     38[0m         [38;5;124m"[39m[38;5;124mFrom version 0.12, the only valid positional argument [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m     43[0m         [38;5;167;01mFutureWarning[39;00m
[1;32m     44[0m     )
[1;32m     45[0m kwargs[38;5;241m.[39mupdate({k: arg [38;5;28;01mfor[39;00m k, arg [38;5;129;01min[39;00m [38;5;28mzip[39m(sig[38;5;241m.[39mparameters, args)})
[0;32m---> 46[0m [38;5;28;01mreturn[39;00m [43mf[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/seaborn/distributions.py:1770[0m, in [0;36mkdeplot[0;34m(x, y, shade, vertical, kernel, bw, gridsize, cut, clip, legend, cumulative, shade_lowest, cbar, cbar_ax, cbar_kws, ax, weights, hue, palette, hue_order, hue_norm, multiple, common_norm, common_grid, levels, thresh, bw_method, bw_adjust, log_scale, color, fill, data, data2, warn_singular, **kwargs)[0m
[1;32m   1767[0m     [38;5;28;01mif[39;00m color [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1768[0m         plot_kws[[38;5;124m"[39m[38;5;124mcolor[39m[38;5;124m"[39m] [38;5;241m=[39m color
[0;32m-> 1770[0m     [43mp[49m[38;5;241;43m.[39;49m[43mplot_univariate_density[49m[43m([49m
[1;32m   1771[0m [43m        [49m[43mmultiple[49m[38;5;241;43m=[39;49m[43mmultiple[49m[43m,[49m
[1;32m   1772[0m [43m        [49m[43mcommon_norm[49m[38;5;241;43m=[39;49m[43mcommon_norm[49m[43m,[49m
[1;32m   1773[0m [43m        [49m[43mcommon_grid[49m[38;5;241;43m=[39;49m[43mcommon_grid[49m[43m,[49m
[1;32m   1774[0m [43m        [49m[43mfill[49m[38;5;241;43m=[39;49m[43mfill[49m[43m,[49m
[1;32m   1775[0m [43m        [49m[43mlegend[49m[38;5;241;43m=[39;49m[43mlegend[49m[43m,[49m
[1;32m   1776[0m [43m        [49m[43mwarn_singular[49m[38;5;241;43m=[39;49m[43mwarn_singular[49m[43m,[49m
[1;32m   1777[0m [43m        [49m[43mestimate_kws[49m[38;5;241;43m=[39;49m[43mestimate_kws[49m[43m,[49m
[1;32m   1778[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mplot_kws[49m[43m,[49m
[1;32m   1779[0m [43m    [49m[43m)[49m
[1;32m   1781[0m [38;5;28;01melse[39;00m:
[1;32m   1783[0m     p[38;5;241m.[39mplot_bivariate_density(
[1;32m   1784[0m         common_norm[38;5;241m=[39mcommon_norm,
[1;32m   1785[0m         fill[38;5;241m=[39mfill,
[0;32m   (...)[0m
[1;32m   1795[0m         [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m   1796[0m     )

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/seaborn/distributions.py:1015[0m, in [0;36m_DistributionPlotter.plot_univariate_density[0;34m(self, multiple, common_norm, common_grid, warn_singular, fill, legend, estimate_kws, **plot_kws)[0m
[1;32m   1012[0m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mvariables:
[1;32m   1014[0m     [38;5;28;01mif[39;00m fill:
[0;32m-> 1015[0m         artist [38;5;241m=[39m [43max[49m[38;5;241;43m.[39;49m[43mfill_between[49m[43m([49m
[1;32m   1016[0m [43m            [49m[43msupport[49m[43m,[49m[43m [49m[43mfill_from[49m[43m,[49m[43m [49m[43mdensity[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43martist_kws[49m
[1;32m   1017[0m [43m        [49m[43m)[49m
[1;32m   1018[0m     [38;5;28;01melse[39;00m:
[1;32m   1019[0m         artist, [38;5;241m=[39m ax[38;5;241m.[39mplot(support, density, [38;5;241m*[39m[38;5;241m*[39martist_kws)

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/__init__.py:1423[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1420[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1421[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1422[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1423[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;28;43mmap[39;49m[43m([49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1425[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1426[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1427[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/axes/_axes.py:5367[0m, in [0;36mAxes.fill_between[0;34m(self, x, y1, y2, where, interpolate, step, **kwargs)[0m
[1;32m   5365[0m [38;5;28;01mdef[39;00m [38;5;21mfill_between[39m([38;5;28mself[39m, x, y1, y2[38;5;241m=[39m[38;5;241m0[39m, where[38;5;241m=[39m[38;5;28;01mNone[39;00m, interpolate[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m   5366[0m                  step[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m-> 5367[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fill_between_x_or_y[49m[43m([49m
[1;32m   5368[0m [43m        [49m[38;5;124;43m"[39;49m[38;5;124;43mx[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mx[49m[43m,[49m[43m [49m[43my1[49m[43m,[49m[43m [49m[43my2[49m[43m,[49m
[1;32m   5369[0m [43m        [49m[43mwhere[49m[38;5;241;43m=[39;49m[43mwhere[49m[43m,[49m[43m [49m[43minterpolate[49m[38;5;241;43m=[39;49m[43minterpolate[49m[43m,[49m[43m [49m[43mstep[49m[38;5;241;43m=[39;49m[43mstep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/matplotlib/axes/_axes.py:5272[0m, in [0;36mAxes._fill_between_x_or_y[0;34m(self, ind_dir, ind, dep1, dep2, where, interpolate, step, **kwargs)[0m
[1;32m   5268[0m         kwargs[[38;5;124m"[39m[38;5;124mfacecolor[39m[38;5;124m"[39m] [38;5;241m=[39m \
[1;32m   5269[0m             [38;5;28mself[39m[38;5;241m.[39m_get_patches_for_fill[38;5;241m.[39mget_next_color()
[1;32m   5271[0m [38;5;66;03m# Handle united data, such as dates[39;00m
[0;32m-> 5272[0m ind, dep1, dep2 [38;5;241m=[39m [38;5;28mmap[39m(
[1;32m   5273[0m     ma[38;5;241m.[39mmasked_invalid, [38;5;28mself[39m[38;5;241m.[39m_process_unit_info(
[1;32m   5274[0m         [(ind_dir, ind), (dep_dir, dep1), (dep_dir, dep2)], kwargs))
[1;32m   5276[0m [38;5;28;01mfor[39;00m name, array [38;5;129;01min[39;00m [
[1;32m   5277[0m         (ind_dir, ind), ([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mdep_dir[38;5;132;01m}[39;00m[38;5;124m1[39m[38;5;124m"[39m, dep1), ([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mdep_dir[38;5;132;01m}[39;00m[38;5;124m2[39m[38;5;124m"[39m, dep2)]:
[1;32m   5278[0m     [38;5;28;01mif[39;00m array[38;5;241m.[39mndim [38;5;241m>[39m [38;5;241m1[39m:

File [0;32m~/.virtualenvs/p39/lib/python3.9/site-packages/numpy/ma/core.py:2360[0m, in [0;36mmasked_invalid[0;34m(a, copy)[0m
[1;32m   2332[0m [38;5;28;01mdef[39;00m [38;5;21mmasked_invalid[39m(a, copy[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[1;32m   2333[0m     [38;5;124;03m"""[39;00m
[1;32m   2334[0m [38;5;124;03m    Mask an array where invalid values occur (NaNs or infs).[39;00m
[1;32m   2335[0m 
[0;32m   (...)[0m
[1;32m   2357[0m 
[1;32m   2358[0m [38;5;124;03m    """[39;00m
[0;32m-> 2360[0m     [38;5;28;01mreturn[39;00m masked_where([38;5;241m~[39m([43mnp[49m[38;5;241;43m.[39;49m[43misfinite[49m[43m([49m[43mgetdata[49m[43m([49m[43ma[49m[43m)[49m[43m)[49m), a, copy[38;5;241m=[39mcopy)

[0;31mTypeError[0m: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
TypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

